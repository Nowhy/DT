import java.io.IOException;

import javax.swing.JOptionPane;

public class Main {
	
	
	public static void main(String args[]) throws IOException { 
		// args: Human or AI 
		// if AI: enter X Y
		// X: METHOD(1,2,3)  
		// Y: STRATEGY(Score first(1), chocolate first (2) five first (3), four first (4)) Level
		int LEVEL = 0;
		Game game = new Game(Player, METHOD, STRATEGY, LEVEL);
		while(LEVEL<=9) {
			int m = 0;
			simpleAI simple = new simpleAI(game);
			testAI(game, simple, METHOD, STRATEGY, LEVEL);
			for(int i = 0; i < 1000; i++) {
				if(game.getBoard().getScore()>=game.getBoard().TARGET) {
					m++;
				}
				game = new Game(METHOD, STRATEGY, LEVEL);
				simple = new simpleAI(game);
				testAI(game, simple, METHOD, STRATEGY, LEVEL);
			}
			LEVEL++;
			System.out.println(LEVEL + "    " + m);
		}
	}
		
		public static void testAI(Game game, simpleAI simple, int METHOD, int STRATEGY, int LEVEL) {
			long startTime = System.currentTimeMillis(); 
			while(game.getBoard().STEP  > 0) {
//				System.out.println(game.getBoard().STEP +"      ffffffffffff    " + game.getBoard().getScore());
				simple.play();
				game.upateStep(game.getBoard().STEP-1);
			}
			long endTime = System.nanoTime(); 
			float running = (endTime - startTime)/1000000;//hao miao
			game.writeFile("LEVEL "+ LEVEL + " FINISH!" + "\r\nTIME: "+ endTime + "\r\n");
			game.writeFile("Score "+ game.getBoard().getScore() + " " + "    RUNNING TIME: "+ running+" ms\r\n\r\n");
//			if( game.getBoard().STEP  == 0 && game.getBoard().getScore() <  game.getBoard().TARGET) {
////				game.reDrawBoard();
//				int result = JOptionPane.showConfirmDialog(null, "Sorry! You Lose the Game. Your Score is " + game.getBoard().getScore() +". And time you spent is " + running +" ms\n"+ " Would you like to continue this level?", "YES", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE); 
//				if(result != JOptionPane.OK_OPTION){
//				    System.exit(0);
//				}else {
//					try {
//						System.exit(0);
//						game = new Game(METHOD, STRATEGY, LEVEL);
//						simple = new simpleAI(game);
//						testAI(game,simple, METHOD, STRATEGY, LEVEL);
//						
//					} catch (IOException e) {
//						// TODO Auto-generated catch block
//						e.printStackTrace();
//					}
//				}
//			}
//			if(game.getBoard().STEP  == 0 && game.getBoard().getScore() >=  game.getBoard().TARGET) {
//				int result = JOptionPane.showConfirmDialog(null, "Congratulations! Your Score is " + game.getBoard().getScore() +". And time you spent is "+running+" ms\n"+ "Continue the next Level " + (LEVEL+2) + "?" , "YES", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE); 
//				if(result != JOptionPane.OK_OPTION){
//				    System.exit(0);
//				}else {
//					try {
//							game = new Game(METHOD, STRATEGY, LEVEL+1);
//							simple = new simpleAI(game);
//							testAI(game,simple, METHOD, STRATEGY, LEVEL+1);
//						
//					} catch (IOException e) {
//						// TODO Auto-generated catch block
//						e.printStackTrace();
//					}
//				}
//				
//				
//			}
	}

}
